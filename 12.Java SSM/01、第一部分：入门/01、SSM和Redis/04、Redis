2019年1月17日9:35:28


Redis 是一个开源的使用 ANSI C 语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库。
Redis 是当前最流行的 NoSQL（Not Only SQL）。
Redis 具备一定持久层的功能，也可以作为一种缓存工具。可以在很大程度上提高互联网系统的性能。
作为持久层，它存储的数据是半结构化的，这就意味着计算机在读入内存中有更少的规则，读入速度更快。
相对于结构化、多范式规则的数据库而言，Redis 更具性能优势。
作为缓存，它可以支持大数据存入内存中，只要命中率高，它就可以快速的响应。



NoSQL 与 数据库系统：

数据库系统拥有更好的规范性和数据完整性，功能更加强大，作为持久层更加完善，安全性更高。
NoSQL 缺点：结构松散、不完整、功能有限，目前尚不具备取代数据库的实例。
NoSQL 优点：作为缓存工具，性能高、高响应


Redis 响应速度非常快，每秒可以执行大约 11W 个写操作 或者 8W 个读操作。其速度远超数据库。
Redis 支持 6 种数据类型（字符串--存储基本类型、哈希结构--存储对象、列表--存储List对象、集合、可排序集合、基数）
    6 种数据类型的两大好处：满足存储各种数据结构体的需要；数据类型少，使用的规则就少，需要的判断逻辑少，读写速度就快。
Redis 的操作是原子的。从而可以确定两个客户同时访问 Redis 服务器时，得到的数据时更新后的值（最新值）。
    在需要高并发的场景，可以考虑使用 Redis 的事务处理一些需要锁定的业务。
Redis 的 MultiUtility 工具。Redis 可以在加缓存、消息传递队列中使用（Redis 支持"发布 + 订阅"的消息模式）。
    在应用程序如 Web 应用程序回话、网站页面点击数等任何短暂的数据中使用。


使用 NoSQL 从数据库中读取数据进行缓存，
一方面，直接可以从内存中读取数据。
    现实中读取远多于写入操作，所以缓存常用数据，提高命中率有助于整体性能的提高，并且减缓数据库的压力，对互联网架构十分有利。
另一方面，满足互联网高并发高速处理数据的场景。
    如抢红包、商品秒杀等需要高速处理，并且保证并发数据安全和一致性。


SSM +　Redis 结构概述
SSM（Spring + Spring MVC + MyBatis） 作为主流框架
SSM + Redis 作为基本结构

各自功能：
Spring IOC 承担资源管理、整合、即插即拔的功能
Spring AOP 可以提供切面管理，特别数据库事务管理功能
Spring MVC 将模型、视图、控制器分层，组成有机灵活系统
MyBatis 提供数据库访问持久层，通过 MyBatis-Spring 能与 Spring 无缝对接
Redis 提供高速处理数据和缓存数据功能。在一些高速运算场合，可以先用它完成运算，再将数据批量存入数据库，可以极大的提升系统性能和响应速度。
