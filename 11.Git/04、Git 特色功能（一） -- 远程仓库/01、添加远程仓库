2019年2月28日21:31:40


添加远程仓库


Git 是分布式版本控制系统， 同一个 Git 仓库， 可以分布到不同的机器上。

其实，同一台电脑上也可以科通多个版本库的， 只要不在同一个目录下。
不过现实中， 没有人会这么做， 因为没有多大的意义。
实际使用中， 往往是找一台服务器， 将自己的数据提交到这台服务器仓库中， 其他每个人都可以从这个服务器中克隆一份到自己电脑上。

GitHub 这个网站的作用， 其实就相当于这个服务器。


GitHub 的账号  AmbroseCdMeng
★ 由于本地 Git 仓库和 GitHub 仓库之间的传输是通过 SSH 加密的。所以需要一定的设置：
    1、创建 SSH Key 。
        在用户主目录下找 .ssh 目录。
        如果有，再看这个目录下有没有 id_rsa 和 id_rsa.pub 这两个文件，如果已经有，可以跳过这一步；
        如果没有， 打开Shell（Windows下打开git bash），创建 SSH Key
            ssh-keygen -t rsa -C "youemail@example.com"
        然后一路确定即可创建（由于这个 key 不是用于重要目录，所以也无需设置密码）

        其中 .ssh 文件夹下 id_rsa 文件是私钥； id_rsa.pub 是公钥

    2、连接 GitHub
        登录 Github， 打开 Account settings， SSH Keys 页面
        点击 Add SSH Key， 填写任意 Title， 在 Key 文本框中粘贴 id_rsa.pub 文件的内容

***********************************************************************************************************

首先，现在 GitHub 上创建一个新仓库。 （我创建了一个 my_learning_notes 的新仓库， 打算用来备份一些学习笔记）

然后，可以将已有的本地仓库与之关联， 将本地仓库的内容推送到 GitHub 仓库中

先将本地打算关联的仓库修改为 git 仓库（使用 git init 命令）（之前测试时只演示了一个新的本地仓库 learngit， 现在将本地 Note 文件夹 init）

接下来， 在本地 git 仓库下执行 ：
    git remote add origin git@github.com:用户名/远程仓库名.git

    其中 origin 是远程库的别名，就是后面 github 下指定用户的远程仓库名的别称，可以修改为自定义的名称。但一般没有必要修改 这是 Git 默认的叫法
    用户名 是 GitHub 的用户名
    远程仓库名 是 准备关联的远程仓库名名称

    F:\108.Notes>git remote add origin git@github.com:AmbroseCdMeng/my_learning_notes.git


下一步，就可以把本地库中的内容推送到远程库中了（在推送之前， 记得将本次仓库中的文件 add 并且 commit）
    git push -u origin master

    其中 git push 就是将本地库的内容推送到远程。
    master 是分支
        由于新建的远程库是空的， 我们第一次推送到 master 分支时 加了 -u 参数。
        这样 Git 不但会把本地的 master 分支内容推送到远程新的 master 分支，还会把本地 master 分支和远程 master 分支关联，简化以后推送和拉取的命令
    
    以后， 只要本地做了提交（commit）， 就可以直接通过命令
        git push origin master 
    将 master 分支最新的修改同步到 GitHub 上了。